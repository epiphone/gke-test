apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT_NAME}
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: ${PROJECT_NAME}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}
  labels:
    app: ${PROJECT_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
    spec:
      containers:
      - name: ${PROJECT_NAME}
        image: ${APP_IMAGE}
        env:
        - name: CORS_ALLOW_ORIGIN
          value: "${CORS_ALLOW_ORIGIN}"
        - name: PORT
          value: "3000"
        - name: PGHOST
          value: "${PGHOST}"
        - name: PGUSER
          value: "${PGUSER}"
        - name: PGDATABASE
          value: "${PGDATABASE}"
        - name: PGPORT
          value: "${PGPORT}"
        - name: PGPASSWORD
          value: "${PGPASSWORD}"
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 250m
            memory: 500Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${PROJECT_NAME}
spec:
  backend:
    serviceName: ${PROJECT_NAME}
    servicePort: 80
